name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fluxor_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: web/package-lock.json
    
    - name: Install Python dependencies
      run: |
        cd fluxor_api
        pip install -r requirements.txt
    
    - name: Install Node.js dependencies
      run: |
        cd web
        npm ci
    
    - name: Run Django tests
      run: |
        cd fluxor_api
        python manage.py test admin_control.tests investments.tests strategy_engine.tests core.tests dashboard.tests fluxor_api.tests --verbosity=1
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/fluxor_test
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key
    
    - name: Build Next.js application
      run: |
        cd web
        npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to server
      run: |
        echo "Deployment would happen here"
        echo "You would typically:"
        echo "1. SSH into your server"
        echo "2. Pull the latest code"
        echo "3. Run docker-compose -f docker-compose.prod.yml up -d --build"
        echo "4. Run database migrations"
        echo "5. Restart services"