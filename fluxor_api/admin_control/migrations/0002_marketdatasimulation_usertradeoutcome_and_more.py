# Generated by Django 4.2.7 on 2025-10-11 08:22

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('trades', '0002_deposit_deposit_wallet'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admin_control', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketDataSimulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cryptocurrency_symbol', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('open_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('high_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('low_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('close_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('volume', models.DecimalField(decimal_places=8, max_digits=20)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserTradeOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome', models.CharField(choices=[('win', 'Win'), ('loss', 'Loss')], max_length=4)),
                ('outcome_percentage', models.DecimalField(decimal_places=2, help_text='Profit or loss percentage', max_digits=5)),
                ('duration_seconds', models.IntegerField(help_text='Trade duration in seconds')),
                ('target_close_time', models.DateTimeField(help_text='When the trade should close')),
                ('is_executed', models.BooleanField(default=False)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trade', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outcome', to='trades.trade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_outcomes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RemoveField(
            model_name='scenarioexecution',
            name='executed_by',
        ),
        migrations.RemoveField(
            model_name='scenarioexecution',
            name='scenario',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='default_loss_rate',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='default_profit_rate',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='index_appreciation_rate',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='index_depreciation_rate',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='index_volatility_factor',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='investment_update_frequency',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='maintenance_mode',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='management_fee_percentage',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='max_loss_rate',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='max_profit_rate',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='max_trade_amount',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='min_investment_amount',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='min_trade_amount',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='portfolio_calculation_frequency',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='price_update_frequency',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='profit_loss_mode',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='trading_enabled',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='trading_fee_percentage',
        ),
        migrations.RemoveField(
            model_name='tradingsettings',
            name='withdrawal_fee_percentage',
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Enable/disable biased trading'),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='loss_rate_percentage',
            field=models.DecimalField(decimal_places=2, default=80.0, help_text='Percentage of trades that should result in loss (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='max_loss_percentage',
            field=models.DecimalField(decimal_places=2, default=30.0, help_text='Maximum loss percentage for losing trades', max_digits=5),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='max_profit_percentage',
            field=models.DecimalField(decimal_places=2, default=15.0, help_text='Maximum profit percentage for winning trades', max_digits=5),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='max_trade_duration_seconds',
            field=models.IntegerField(default=14400, help_text='Maximum trade duration in seconds'),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='min_loss_percentage',
            field=models.DecimalField(decimal_places=2, default=10.0, help_text='Minimum loss percentage for losing trades', max_digits=5),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='min_profit_percentage',
            field=models.DecimalField(decimal_places=2, default=5.0, help_text='Minimum profit percentage for winning trades', max_digits=5),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='min_trade_duration_seconds',
            field=models.IntegerField(default=30, help_text='Minimum trade duration in seconds'),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='price_volatility_percentage',
            field=models.DecimalField(decimal_places=2, default=2.0, help_text='Price volatility for live data simulation (Â±%)', max_digits=5),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='update_interval_seconds',
            field=models.IntegerField(default=5, help_text='Price update interval for WebSocket in seconds'),
        ),
        migrations.AddField(
            model_name='tradingsettings',
            name='win_rate_percentage',
            field=models.DecimalField(decimal_places=2, default=20.0, help_text='Percentage of trades that should result in profit (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='tradingsettings',
            name='updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trading_settings_updates', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='ProfitLossScenario',
        ),
        migrations.DeleteModel(
            name='ScenarioExecution',
        ),
        migrations.AddIndex(
            model_name='marketdatasimulation',
            index=models.Index(fields=['cryptocurrency_symbol', '-timestamp'], name='admin_contr_cryptoc_572dd0_idx'),
        ),
    ]
