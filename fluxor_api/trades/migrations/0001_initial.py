# Generated by Django 4.2.7 on 2025-10-01 12:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cryptocurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('current_price', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('market_cap', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('volume_24h', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('price_change_24h', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'cryptocurrency',
                'verbose_name_plural': 'cryptocurrencies',
            },
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('to_address', models.CharField(max_length=255)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('fees', models.DecimalField(decimal_places=8, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, unique=True)),
                ('balance', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('label', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('hold', 'Hold')], max_length=4)),
                ('confidence', models.DecimalField(decimal_places=2, max_digits=5)),
                ('price_target', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('reasoning', models.TextField(blank=True)),
                ('indicators', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('swap', 'Swap')], max_length=4)),
                ('amount', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('leverage', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('executed', 'Executed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('pnl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('fees', models.DecimalField(decimal_places=8, default=0, max_digits=10)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('btc_amount', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('usd_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('cryptocurrency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('trade', 'Trade'), ('swap', 'Crypto Swap'), ('payment', 'Payment'), ('price', 'Price Alert'), ('signal', 'Trading Signal'), ('system', 'System'), ('security', 'Security')], max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('data', models.JSONField(default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('wallet_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptoSwap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('to_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('exchange_rate', models.DecimalField(decimal_places=8, max_digits=20)),
                ('network_fee', models.DecimalField(decimal_places=8, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('swap_provider', models.CharField(default='1inch', max_length=50)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swaps_from', to='trades.cryptocurrency')),
                ('to_cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swaps_to', to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_swaps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptoPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('amount_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_crypto', models.DecimalField(decimal_places=8, max_digits=20)),
                ('payment_provider', models.CharField(choices=[('coinbase', 'Coinbase Commerce'), ('nowpayments', 'NOWPayments'), ('bitpay', 'BitPay'), ('btcpay', 'BTCPay Server')], max_length=20)),
                ('provider_payment_id', models.CharField(blank=True, max_length=255)),
                ('payment_url', models.URLField(blank=True)),
                ('wallet_address', models.CharField(max_length=255)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('expired', 'Expired'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('expires_at', models.DateTimeField()),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=20)),
                ('market_cap', models.DecimalField(decimal_places=2, max_digits=20)),
                ('timestamp', models.DateTimeField()),
                ('source', models.CharField(default='binance', max_length=50)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
            ],
            options={
                'ordering': ['-timestamp'],
                'unique_together': {('cryptocurrency', 'timestamp', 'source')},
            },
        ),
        migrations.CreateModel(
            name='CryptoWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_type', models.CharField(choices=[('bitcoin', 'Bitcoin'), ('ethereum', 'Ethereum'), ('solana', 'Solana'), ('cardano', 'Cardano'), ('polkadot', 'Polkadot'), ('chainlink', 'Chainlink')], max_length=20)),
                ('address', models.CharField(max_length=255, unique=True)),
                ('private_key_encrypted', models.TextField(blank=True)),
                ('balance', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('label', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'wallet_type')},
            },
        ),
    ]
