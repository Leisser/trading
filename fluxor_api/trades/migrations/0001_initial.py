# Generated by Django 4.2.7 on 2025-10-06 00:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cryptocurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('coin_id', models.CharField(blank=True, max_length=100)),
                ('rank', models.PositiveIntegerField(db_index=True, default=999)),
                ('current_price', models.DecimalField(decimal_places=12, default=0, max_digits=30)),
                ('market_cap', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('volume_24h', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('circulating_supply', models.DecimalField(decimal_places=8, default=0, max_digits=30)),
                ('total_supply', models.DecimalField(blank=True, decimal_places=8, default=0, max_digits=30, null=True)),
                ('max_supply', models.DecimalField(blank=True, decimal_places=8, default=0, max_digits=30, null=True)),
                ('price_change_1h', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('price_change_24h', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('price_change_7d', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('price_change_30d', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('price_change_1y', models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=10, null=True)),
                ('volume_change_24h', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('market_cap_change_24h', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('rsi_14', models.DecimalField(blank=True, decimal_places=2, default=50, max_digits=5, null=True)),
                ('ma_20', models.DecimalField(blank=True, decimal_places=12, default=0, max_digits=30, null=True)),
                ('ma_50', models.DecimalField(blank=True, decimal_places=12, default=0, max_digits=30, null=True)),
                ('blockchain_network', models.CharField(blank=True, max_length=50)),
                ('contract_address', models.CharField(blank=True, max_length=255)),
                ('decimals', models.PositiveIntegerField(blank=True, default=18, null=True)),
                ('categories', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_tradeable', models.BooleanField(default=True)),
                ('is_stablecoin', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('data_source', models.CharField(default='coinmarketcap', max_length=50)),
                ('last_updated_external', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'cryptocurrency',
                'verbose_name_plural': 'cryptocurrencies',
            },
        ),
        migrations.CreateModel(
            name='CryptoIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('index_type', models.CharField(choices=[('market_cap', 'Market Cap Weighted'), ('equal_weight', 'Equal Weighted'), ('custom', 'Custom Weighted'), ('defi', 'DeFi Index'), ('layer1', 'Layer 1 Index'), ('metaverse', 'Metaverse Index'), ('gamefi', 'GameFi Index')], default='market_cap', max_length=15)),
                ('current_value', models.DecimalField(decimal_places=8, default=1000, max_digits=20)),
                ('total_market_cap', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('price_change_24h', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('price_change_7d', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('price_change_30d', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_tradeable', models.BooleanField(default=True)),
                ('minimum_investment', models.DecimalField(decimal_places=8, default=0.001, max_digits=20)),
                ('management_fee', models.DecimalField(decimal_places=4, default=0, max_digits=5)),
                ('rebalance_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], default='monthly', max_length=10)),
                ('last_rebalanced', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CryptoInvestment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investment_type', models.CharField(choices=[('index', 'Index Investment'), ('single_crypto', 'Single Cryptocurrency'), ('dca', 'Dollar Cost Averaging'), ('hodl', 'Long-term Hold')], default='index', max_length=15)),
                ('name', models.CharField(max_length=100)),
                ('total_invested_btc', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('total_invested_usd', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('current_value_btc', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('current_value_usd', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('unrealized_pnl_btc', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('unrealized_pnl_usd', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('unrealized_pnl_percent', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('all_time_high_value', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('max_drawdown_percent', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('auto_compound', models.BooleanField(default=False)),
                ('dca_amount_btc', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('dca_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('next_dca_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('closed', 'Closed')], default='active', max_length=10)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('crypto_index', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='investments', to='trades.cryptoindex')),
                ('cryptocurrency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='single_investments', to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_investments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='DepositWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_address', models.CharField(max_length=255, unique=True)),
                ('wallet_name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('current_balance', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('total_received', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('total_confirmed', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('min_confirmation_blocks', models.IntegerField(default=3)),
                ('auto_confirm_threshold', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('private_key_encrypted', models.TextField(blank=True)),
                ('wallet_provider', models.CharField(blank=True, max_length=50)),
                ('api_credentials', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_wallets', to=settings.AUTH_USER_MODEL)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
            ],
            options={
                'ordering': ['-is_primary', 'cryptocurrency__symbol'],
                'unique_together': {('cryptocurrency', 'is_primary')},
            },
        ),
        migrations.CreateModel(
            name='TradingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trading_enabled', models.BooleanField(default=True)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('profit_loss_mode', models.CharField(choices=[('manual', 'Manual Control'), ('automatic', 'Automatic Based on Market'), ('simulated', 'Simulated Trading'), ('custom', 'Custom Scenarios')], default='automatic', max_length=10)),
                ('default_profit_rate', models.DecimalField(decimal_places=4, default=5.0, max_digits=10)),
                ('default_loss_rate', models.DecimalField(decimal_places=4, default=2.0, max_digits=10)),
                ('max_profit_rate', models.DecimalField(decimal_places=4, default=100.0, max_digits=10)),
                ('max_loss_rate', models.DecimalField(decimal_places=4, default=50.0, max_digits=10)),
                ('index_appreciation_rate', models.DecimalField(decimal_places=4, default=10.0, max_digits=10)),
                ('index_depreciation_rate', models.DecimalField(decimal_places=4, default=5.0, max_digits=10)),
                ('index_volatility_factor', models.DecimalField(decimal_places=2, default=1.5, max_digits=5)),
                ('price_update_frequency', models.IntegerField(default=1)),
                ('investment_update_frequency', models.IntegerField(default=5)),
                ('portfolio_calculation_frequency', models.IntegerField(default=10)),
                ('min_trade_amount', models.DecimalField(decimal_places=8, default=0.001, max_digits=20)),
                ('max_trade_amount', models.DecimalField(decimal_places=8, default=100.0, max_digits=20)),
                ('min_investment_amount', models.DecimalField(decimal_places=8, default=0.01, max_digits=20)),
                ('trading_fee_percentage', models.DecimalField(decimal_places=4, default=0.1, max_digits=5)),
                ('investment_management_fee', models.DecimalField(decimal_places=4, default=0.5, max_digits=5)),
                ('withdrawal_fee_percentage', models.DecimalField(decimal_places=4, default=0.05, max_digits=5)),
                ('enable_auto_trading', models.BooleanField(default=False)),
                ('auto_trade_frequency', models.IntegerField(default=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Trading Settings',
                'verbose_name_plural': 'Trading Settings',
            },
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('to_address', models.CharField(max_length=255)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('fees', models.DecimalField(decimal_places=8, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, unique=True)),
                ('balance', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('label', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('hold', 'Hold')], max_length=4)),
                ('confidence', models.DecimalField(decimal_places=2, max_digits=5)),
                ('price_target', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('reasoning', models.TextField(blank=True)),
                ('indicators', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell'), ('swap', 'Swap')], max_length=4)),
                ('amount', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=20)),
                ('leverage', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('executed', 'Executed'), ('cancelled', 'Cancelled'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('pnl', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('fees', models.DecimalField(decimal_places=8, default=0, max_digits=10)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('btc_amount', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('usd_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('cryptocurrency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProfitLossScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('scenario_type', models.CharField(choices=[('profit', 'Profit Scenario'), ('loss', 'Loss Scenario'), ('mixed', 'Mixed Scenario')], max_length=10)),
                ('percentage_change', models.DecimalField(decimal_places=4, max_digits=10)),
                ('time_duration', models.IntegerField()),
                ('time_unit', models.CharField(choices=[('seconds', 'Seconds'), ('minutes', 'Minutes'), ('hours', 'Hours'), ('days', 'Days'), ('weeks', 'Weeks'), ('months', 'Months')], max_length=10)),
                ('apply_to_all_investments', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('execute_immediately', models.BooleanField(default=False)),
                ('scheduled_execution', models.DateTimeField(blank=True, null=True)),
                ('times_executed', models.IntegerField(default=0)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_scenarios', to=settings.AUTH_USER_MODEL)),
                ('target_crypto_index', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trades.cryptoindex')),
                ('target_cryptocurrency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('trade', 'Trade'), ('swap', 'Crypto Swap'), ('payment', 'Payment'), ('price', 'Price Alert'), ('signal', 'Trading Signal'), ('investment', 'Investment Update'), ('rebalance', 'Index Rebalance'), ('dca', 'DCA Transaction'), ('deposit', 'Deposit Update'), ('withdrawal', 'Withdrawal'), ('system', 'System'), ('security', 'Security')], max_length=15)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('data', models.JSONField(default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvestmentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit/Add Funds'), ('withdraw', 'Withdraw/Reduce Position'), ('compound', 'Compound Gains'), ('rebalance', 'Portfolio Rebalance'), ('dividend', 'Dividend/Reward Payment'), ('fee', 'Management Fee')], max_length=10)),
                ('amount_btc', models.DecimalField(decimal_places=8, max_digits=20)),
                ('amount_usd', models.DecimalField(decimal_places=2, max_digits=20)),
                ('btc_price_at_transaction', models.DecimalField(decimal_places=8, max_digits=20)),
                ('index_value_at_transaction', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('fees_btc', models.DecimalField(decimal_places=8, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('is_automatic', models.BooleanField(default=False)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('investment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='trades.cryptoinvestment')),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='IndexComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('target_weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('current_weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('contribution_to_return', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('crypto_index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='trades.cryptoindex')),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
            ],
            options={
                'ordering': ['-weight_percentage'],
                'unique_together': {('crypto_index', 'cryptocurrency')},
            },
        ),
        migrations.CreateModel(
            name='Deposit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('wallet_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptoSwap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('to_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('exchange_rate', models.DecimalField(decimal_places=8, max_digits=20)),
                ('network_fee', models.DecimalField(decimal_places=8, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('swap_provider', models.CharField(default='1inch', max_length=50)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swaps_from', to='trades.cryptocurrency')),
                ('to_cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swaps_to', to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_swaps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptoPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('amount_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_crypto', models.DecimalField(decimal_places=8, max_digits=20)),
                ('payment_provider', models.CharField(choices=[('coinbase', 'Coinbase Commerce'), ('nowpayments', 'NOWPayments'), ('bitpay', 'BitPay'), ('btcpay', 'BTCPay Server')], max_length=20)),
                ('provider_payment_id', models.CharField(blank=True, max_length=255)),
                ('payment_url', models.URLField(blank=True)),
                ('wallet_address', models.CharField(max_length=255)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('expired', 'Expired'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('expires_at', models.DateTimeField()),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_payments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='cryptoindex',
            name='cryptocurrencies',
            field=models.ManyToManyField(through='trades.IndexComponent', to='trades.cryptocurrency'),
        ),
        migrations.CreateModel(
            name='AutomatedTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('price_update', 'Price Update'), ('investment_calculation', 'Investment Calculation'), ('portfolio_update', 'Portfolio Update'), ('scenario_execution', 'Scenario Execution'), ('deposit_check', 'Deposit Check'), ('notification_send', 'Notification Send')], max_length=25)),
                ('task_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('items_processed', models.IntegerField(default=0)),
                ('success_count', models.IntegerField(default=0)),
                ('error_count', models.IntegerField(default=0)),
                ('error_messages', models.TextField(blank=True)),
                ('task_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['task_type', 'status'], name='trades_auto_task_ty_7e07d1_idx'), models.Index(fields=['created_at'], name='trades_auto_created_941248_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserDepositRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('from_address', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('confirmation_blocks', models.IntegerField(default=0)),
                ('required_confirmations', models.IntegerField(default=3)),
                ('review_notes', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('deposit_wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.depositwallet')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_deposits', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='trades_user_user_id_a51897_idx'), models.Index(fields=['status', 'created_at'], name='trades_user_status_730db6_idx')],
            },
        ),
        migrations.CreateModel(
            name='PriceMovementLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('new_price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price_change', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price_change_percent', models.DecimalField(decimal_places=4, max_digits=10)),
                ('movement_type', models.CharField(choices=[('natural', 'Natural Market Movement'), ('admin_controlled', 'Admin Controlled'), ('scenario_based', 'Scenario Execution'), ('auto_trading', 'Auto Trading')], default='natural', max_length=20)),
                ('volume_affected', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('crypto_index', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trades.cryptoindex')),
                ('cryptocurrency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
                ('triggered_by_scenario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trades.profitlossscenario')),
                ('triggered_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['cryptocurrency', 'timestamp'], name='trades_pric_cryptoc_6687ad_idx'), models.Index(fields=['crypto_index', 'timestamp'], name='trades_pric_crypto__de4d2e_idx'), models.Index(fields=['timestamp'], name='trades_pric_timesta_5c40fe_idx')],
            },
        ),
        migrations.CreateModel(
            name='PriceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=20)),
                ('market_cap', models.DecimalField(decimal_places=2, max_digits=20)),
                ('timestamp', models.DateTimeField()),
                ('source', models.CharField(default='binance', max_length=50)),
                ('cryptocurrency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trades.cryptocurrency')),
            ],
            options={
                'ordering': ['-timestamp'],
                'unique_together': {('cryptocurrency', 'timestamp', 'source')},
            },
        ),
        migrations.CreateModel(
            name='IndexPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('market_cap', models.DecimalField(decimal_places=2, max_digits=30)),
                ('volume_24h', models.DecimalField(decimal_places=2, default=0, max_digits=30)),
                ('daily_return', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('cumulative_return', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('timestamp', models.DateTimeField()),
                ('crypto_index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='trades.cryptoindex')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['crypto_index', 'timestamp'], name='trades_inde_crypto__b7a69d_idx')],
                'unique_together': {('crypto_index', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='CryptoWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_type', models.CharField(choices=[('bitcoin', 'Bitcoin'), ('ethereum', 'Ethereum'), ('solana', 'Solana'), ('cardano', 'Cardano'), ('polkadot', 'Polkadot'), ('chainlink', 'Chainlink')], max_length=20)),
                ('address', models.CharField(max_length=255, unique=True)),
                ('private_key_encrypted', models.TextField(blank=True)),
                ('balance', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('label', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_wallets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'wallet_type')},
            },
        ),
        migrations.AddIndex(
            model_name='cryptoinvestment',
            index=models.Index(fields=['user', 'status'], name='trades_cryp_user_id_098bb7_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptoinvestment',
            index=models.Index(fields=['crypto_index', 'status'], name='trades_cryp_crypto__8d73a6_idx'),
        ),
        migrations.AddIndex(
            model_name='cryptoinvestment',
            index=models.Index(fields=['cryptocurrency', 'status'], name='trades_cryp_cryptoc_c2e321_idx'),
        ),
    ]
