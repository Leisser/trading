# Generated by Django 4.2.7 on 2025-10-01 12:54

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=100, unique=True)),
                ('exchange_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('trading_pair', models.CharField(max_length=20)),
                ('base_currency', models.CharField(max_length=10)),
                ('quote_currency', models.CharField(max_length=10)),
                ('order_type', models.CharField(choices=[('market', 'Market'), ('limit', 'Limit'), ('stop_market', 'Stop Market'), ('stop_limit', 'Stop Limit'), ('take_profit', 'Take Profit'), ('take_profit_limit', 'Take Profit Limit'), ('trailing_stop', 'Trailing Stop')], max_length=20)),
                ('side', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=4)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('stop_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('take_profit_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('time_in_force', models.CharField(choices=[('GTC', 'Good Till Cancelled'), ('IOC', 'Immediate Or Cancel'), ('FOK', 'Fill Or Kill'), ('DAY', 'Day'), ('GTD', 'Good Till Date')], default='GTC', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('open', 'Open'), ('partially_filled', 'Partially Filled'), ('filled', 'Filled'), ('cancelled', 'Cancelled'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('filled_quantity', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('average_fill_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('total_quote_amount', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('fee_currency', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('filled_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_post_only', models.BooleanField(default=False)),
                ('reduce_only', models.BooleanField(default=False)),
                ('iceberg_quantity', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('client_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trading_pair', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField()),
                ('bids', models.JSONField()),
                ('asks', models.JSONField()),
                ('sequence_number', models.BigIntegerField(blank=True, null=True)),
                ('exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['trading_pair', 'timestamp'], name='order_manag_trading_9d0f3b_idx'), models.Index(fields=['timestamp'], name='order_manag_timesta_30dae3_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrderAlgo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algo_type', models.CharField(choices=[('twap', 'Time-Weighted Average Price'), ('vwap', 'Volume-Weighted Average Price'), ('iceberg', 'Iceberg'), ('dca', 'Dollar Cost Averaging'), ('grid', 'Grid Trading')], max_length=20)),
                ('parameters', models.JSONField(default=dict)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_chunks', models.IntegerField(default=1)),
                ('executed_chunks', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='algo_order', to='order_management.order')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('basic', 'Basic Order'), ('bracket', 'Bracket Order'), ('oco', 'One-Cancels-Other'), ('trailing_stop', 'Trailing Stop')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('trading_pair', models.CharField(max_length=20)),
                ('order_type', models.CharField(choices=[('market', 'Market'), ('limit', 'Limit'), ('stop_market', 'Stop Market'), ('stop_limit', 'Stop Limit'), ('take_profit', 'Take Profit'), ('take_profit_limit', 'Take Profit Limit'), ('trailing_stop', 'Trailing Stop')], max_length=20)),
                ('side', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=4)),
                ('quantity', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('price_offset', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('stop_loss_offset', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('take_profit_offset', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('time_in_force', models.CharField(choices=[('GTC', 'Good Till Cancelled'), ('IOC', 'Immediate Or Cancel'), ('FOK', 'Fill Or Kill'), ('DAY', 'Day'), ('GTD', 'Good Till Date')], default='GTC', max_length=3)),
                ('is_post_only', models.BooleanField(default=False)),
                ('reduce_only', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='OrderFill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fill_id', models.CharField(max_length=100, unique=True)),
                ('exchange_fill_id', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.DecimalField(decimal_places=8, max_digits=20)),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('quote_amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=20)),
                ('fee_currency', models.CharField(blank=True, max_length=10, null=True)),
                ('filled_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fills', to='order_management.order')),
            ],
            options={
                'ordering': ['-filled_at'],
                'indexes': [models.Index(fields=['order', 'filled_at'], name='order_manag_order_i_03938c_idx'), models.Index(fields=['fill_id'], name='order_manag_fill_id_c9167e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', 'status'], name='order_manag_user_id_c6355f_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['trading_pair', 'status'], name='order_manag_trading_79d611_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='order_manag_created_5f092a_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_id'], name='order_manag_order_i_c971e2_idx'),
        ),
    ]
