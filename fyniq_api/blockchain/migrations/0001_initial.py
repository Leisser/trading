# Generated by Django 4.2.7 on 2025-10-01 12:54

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_height', models.IntegerField(help_text='Block height', unique=True)),
                ('block_hash', models.CharField(help_text='Block hash', max_length=255, unique=True)),
                ('previous_block_hash', models.CharField(blank=True, help_text='Previous block hash', max_length=255)),
                ('merkle_root', models.CharField(help_text='Merkle root', max_length=255)),
                ('timestamp', models.DateTimeField(help_text='Block timestamp')),
                ('difficulty', models.DecimalField(decimal_places=8, help_text='Block difficulty', max_digits=20)),
                ('nonce', models.BigIntegerField(help_text='Block nonce')),
                ('size', models.IntegerField(help_text='Block size in bytes')),
                ('weight', models.IntegerField(help_text='Block weight')),
                ('transaction_count', models.IntegerField(default=0, help_text='Number of transactions in block')),
                ('miner_address', models.CharField(blank=True, help_text='Miner address', max_length=255)),
                ('block_reward', models.DecimalField(decimal_places=8, help_text='Block reward in BTC', max_digits=20)),
            ],
            options={
                'ordering': ['-block_height'],
            },
        ),
        migrations.CreateModel(
            name='BlockchainMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('healthy', 'Healthy'), ('warning', 'Warning'), ('error', 'Error')], max_length=10)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('tx_hash', models.CharField(help_text='Blockchain transaction hash', max_length=255, unique=True)),
                ('block_height', models.IntegerField(blank=True, help_text='Block height where transaction was included', null=True)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('fee', 'Fee')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=8, help_text='Transaction amount in BTC', max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, default=0, help_text='Transaction fee in BTC', max_digits=20)),
                ('from_address', models.CharField(blank=True, help_text='Source address', max_length=255)),
                ('to_address', models.CharField(blank=True, help_text='Destination address', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('confirmations', models.IntegerField(default=0, help_text='Number of confirmations')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Transaction timestamp')),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='When transaction was confirmed', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the transaction')),
                ('raw_data', models.JSONField(default=dict, help_text='Raw transaction data from blockchain')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['tx_hash'], name='blockchain__tx_hash_64a17a_idx'), models.Index(fields=['status'], name='blockchain__status_5888fa_idx'), models.Index(fields=['transaction_type'], name='blockchain__transac_e15dcb_idx'), models.Index(fields=['timestamp'], name='blockchain__timesta_8ceb09_idx')],
            },
        ),
        migrations.CreateModel(
            name='NetworkStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Stats timestamp')),
                ('current_difficulty', models.DecimalField(decimal_places=8, help_text='Current network difficulty', max_digits=20)),
                ('hash_rate', models.DecimalField(decimal_places=2, help_text='Network hash rate in EH/s', max_digits=20)),
                ('block_time', models.IntegerField(help_text='Average block time in seconds')),
                ('mempool_size', models.IntegerField(help_text='Number of transactions in mempool')),
                ('mempool_bytes', models.BigIntegerField(help_text='Mempool size in bytes')),
                ('mempool_fee_rate', models.DecimalField(decimal_places=8, help_text='Current mempool fee rate', max_digits=20)),
                ('btc_price_usd', models.DecimalField(decimal_places=2, help_text='Bitcoin price in USD', max_digits=10)),
                ('market_cap', models.DecimalField(decimal_places=2, help_text='Market capitalization', max_digits=15)),
                ('volume_24h', models.DecimalField(decimal_places=2, help_text='24h trading volume', max_digits=15)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='blockchain__timesta_ab3e29_idx')],
            },
        ),
        migrations.CreateModel(
            name='MempoolTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tx_hash', models.CharField(help_text='Transaction hash', max_length=255, unique=True)),
                ('fee_rate', models.DecimalField(decimal_places=8, help_text='Fee rate in sat/vB', max_digits=20)),
                ('fee', models.DecimalField(decimal_places=8, help_text='Total fee in BTC', max_digits=20)),
                ('size', models.IntegerField(help_text='Transaction size in bytes')),
                ('weight', models.IntegerField(help_text='Transaction weight')),
                ('first_seen', models.DateTimeField(auto_now_add=True, help_text='When transaction was first seen')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('is_confirmed', models.BooleanField(default=False, help_text='Whether transaction has been confirmed')),
                ('confirmed_in_block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blockchain.block')),
            ],
            options={
                'ordering': ['-fee_rate'],
            },
        ),
        migrations.AddIndex(
            model_name='block',
            index=models.Index(fields=['block_height'], name='blockchain__block_h_54dd9c_idx'),
        ),
        migrations.AddIndex(
            model_name='block',
            index=models.Index(fields=['block_hash'], name='blockchain__block_h_3f0343_idx'),
        ),
        migrations.AddIndex(
            model_name='block',
            index=models.Index(fields=['timestamp'], name='blockchain__timesta_0ef25b_idx'),
        ),
        migrations.AddIndex(
            model_name='mempooltransaction',
            index=models.Index(fields=['tx_hash'], name='blockchain__tx_hash_1f58c6_idx'),
        ),
        migrations.AddIndex(
            model_name='mempooltransaction',
            index=models.Index(fields=['fee_rate'], name='blockchain__fee_rat_1934a9_idx'),
        ),
        migrations.AddIndex(
            model_name='mempooltransaction',
            index=models.Index(fields=['first_seen'], name='blockchain__first_s_7a6399_idx'),
        ),
    ]
